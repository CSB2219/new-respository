import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

class BankAccount {
    private String accountHolder;
    private int accountNumber;
    private double balance;

    // Constructor
    public BankAccount(String accountHolder, int accountNumber) {
        this.accountHolder = accountHolder;
        this.accountNumber = accountNumber;
        this.balance = 0.0;
    }

    // Getter methods
    public String getAccountHolder() {
        return accountHolder;
    }

    public int getAccountNumber() {
        return accountNumber;
    }

    public double getBalance() {
        return balance;
    }

    // Deposit method
    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Deposited: " + amount + " | New Balance: " + balance);
        } else {
            System.out.println("Deposit amount must be positive.");
        }
    }

    // Withdraw method
    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("Withdrawn: " + amount + " | Remaining Balance: " + balance);
        } else {
            System.out.println("Insufficient funds or invalid amount.");
        }
    }

    // Transfer method
    public void transferTo(BankAccount targetAccount, double amount) {
        if (amount > 0 && amount <= balance) {
            this.balance -= amount;
            targetAccount.deposit(amount);
            System.out.println("Transferred " + amount + " to Account Number " + targetAccount.getAccountNumber());
        } else {
            System.out.println("Transfer failed. Insufficient funds or invalid amount.");
        }
    }

    // Display account details
    public void displayAccountDetails() {
        System.out.println("Account Holder: " + accountHolder);
        System.out.println("Account Number: " + accountNumber);
        System.out.println("Balance: " + balance);
    }
}

public class BankAccountManagementSystem {
    private static Map<Integer, BankAccount> accounts = new HashMap<>();
    private static Scanner scanner = new Scanner(System.in);
    
    public static void main(String[] args) {
        boolean running = true;

        while (running) {
            System.out.println("\n--- Bank Account Management System ---");
            System.out.println("1. Create New Account");
            System.out.println("2. Deposit Money");
            System.out.println("3. Withdraw Money");
            System.out.println("4. Transfer Money");
            System.out.println("5. Check Account Balance");
            System.out.println("6. Display Account Details");
            System.out.println("7. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    createNewAccount();
                    break;
                case 2:
                    depositMoney();
                    break;
                case 3:
                    withdrawMoney();
                    break;
                case 4:
                    transferMoney();
                    break;
                case 5:
                    checkBalance();
                    break;
                case 6:
                    displayAccountDetails();
                    break;
                case 7:
                    running = false;
                    System.out.println("Exiting the system. Goodbye!");
                    break;
                default:
                    System.out.println("Invalid choice, please try again.");
            }
        }
    }

    // Method to create a new account
    private static void createNewAccount() {
        System.out.print("Enter account holder name: ");
        scanner.nextLine(); // Consume newline character
        String name = scanner.nextLine();

        System.out.print("Enter a new account number (4 digits): ");
        int accountNumber = scanner.nextInt();

        if (accounts.containsKey(accountNumber)) {
            System.out.println("Account number already exists. Please choose a different number.");
        } else {
            BankAccount newAccount = new BankAccount(name, accountNumber);
            accounts.put(accountNumber, newAccount);
            System.out.println("Account created successfully.");
        }
    }

    // Method to deposit money into an account
    private static void depositMoney() {
        System.out.print("Enter your account number: ");
        int accountNumber = scanner.nextInt();

        if (accounts.containsKey(accountNumber)) {
            System.out.print("Enter deposit amount: ");
            double amount = scanner.nextDouble();
            BankAccount account = accounts.get(accountNumber);
            account.deposit(amount);
        } else {
            System.out.println("Account not found.");
        }
    }

    // Method to withdraw money from an account
    private static void withdrawMoney() {
        System.out.print("Enter your account number: ");
        int accountNumber = scanner.nextInt();

        if (accounts.containsKey(accountNumber)) {
            System.out.print("Enter withdrawal amount: ");
            double amount = scanner.nextDouble();
            BankAccount account = accounts.get(accountNumber);
            account.withdraw(amount);
        } else {
            System.out.println("Account not found.");
        }
    }

    // Method to transfer money between two accounts
    private static void transferMoney() {
        System.out.print("Enter your account number: ");
        int fromAccountNumber = scanner.nextInt();

        if (accounts.containsKey(fromAccountNumber)) {
            System.out.print("Enter target account number: ");
            int toAccountNumber = scanner.nextInt();

            if (accounts.containsKey(toAccountNumber)) {
                System.out.print("Enter transfer amount: ");
                double amount = scanner.nextDouble();

                BankAccount fromAccount = accounts.get(fromAccountNumber);
                BankAccount toAccount = accounts.get(toAccountNumber);
                fromAccount.transferTo(toAccount, amount);
            } else {
                System.out.println("Target account not found.");
            }
        } else {
            System.out.println("Source account not found.");
        }
    }

    // Method to check the balance of an account
    private static void checkBalance() {
        System.out.print("Enter your account number: ");
        int accountNumber = scanner.nextInt();

        if (accounts.containsKey(accountNumber)) {
            BankAccount account = accounts.get(accountNumber);
            System.out.println("Current balance: " + account.getBalance());
        } else {
            System.out.println("Account not found.");
        }
    }

    // Method to display account details
    private static void displayAccountDetails() {
        System.out.print("Enter your account number: ");
        int accountNumber = scanner.nextInt();

        if (accounts.containsKey(accountNumber)) {
            BankAccount account = accounts.get(accountNumber);
            account.displayAccountDetails();
        } else {
            System.out.println("Account not found.");
        }
    }
}
